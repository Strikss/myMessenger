{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailvoloshyn/Desktop/FRONTEND/chatapplication/src/Components/Users/Users.js\",\n    _s = $RefreshSig$();\n\nimport s from \"./Users.module.css\";\nimport SingleUser from \"./SingleUser/SingleUser\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = props => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const onChangeText = e => {\n    return setSearchTerm(e.target.value);\n  };\n\n  debugger;\n  const user = props.users.filter(val => {\n    if (searchTerm == \"\") {\n      return val;\n    } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n      return val;\n    }\n  }).map(u => {\n    return /*#__PURE__*/_jsxDEV(SingleUser, {\n      name: u.name,\n      id: u.id,\n      lastMessage: u.lastMessage,\n      date: u.date,\n      setCurrentChat: props.setCurrentChat,\n      messages: u.messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.usersWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        onChange: () => onChangeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Users, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/mikhailvoloshyn/Desktop/FRONTEND/chatapplication/src/Components/Users/Users.js"],"names":["s","SingleUser","Field","reduxForm","useState","Users","props","searchTerm","setSearchTerm","onChangeText","e","target","value","user","users","filter","val","name","toLowerCase","includes","map","u","id","lastMessage","date","setCurrentChat","messages","usersWrapper"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,oBAAd;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1B,WAAOF,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB;AACD,GAFD;;AAGA;AACA,QAAMC,IAAI,GAAGP,KAAK,CAACQ,KAAN,CACVC,MADU,CACFC,GAAD,IAAS;AACf,QAAIT,UAAU,IAAI,EAAlB,EAAsB;AACpB,aAAOS,GAAP;AACD,KAFD,MAEO,IAAIA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCZ,UAAU,CAACW,WAAX,EAAhC,CAAJ,EAA+D;AACpE,aAAOF,GAAP;AACD;AACF,GAPU,EAQVI,GARU,CAQLC,CAAD,IAAO;AACV,wBACE,QAAC,UAAD;AACE,MAAA,IAAI,EAAEA,CAAC,CAACJ,IADV;AAEE,MAAA,EAAE,EAAEI,CAAC,CAACC,EAFR;AAGE,MAAA,WAAW,EAAED,CAAC,CAACE,WAHjB;AAIE,MAAA,IAAI,EAAEF,CAAC,CAACG,IAJV;AAKE,MAAA,cAAc,EAAElB,KAAK,CAACmB,cALxB;AAME,MAAA,QAAQ,EAAEJ,CAAC,CAACK;AANd;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAnBU,CAAb;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAE1B,CAAC,CAAC2B,YAAlB;AAAA,4BACE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,WAFd;AAGE,QAAA,QAAQ,EAAE,MAAMlB;AAHlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,gBAAMI;AAAN;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtCD;;GAAMR,K;;KAAAA,K;AAwCN,eAAeA,KAAf","sourcesContent":["import s from \"./Users.module.css\";\nimport SingleUser from \"./SingleUser/SingleUser\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { useState } from \"react\";\n\nconst Users = (props) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const onChangeText = (e) => {\n    return setSearchTerm(e.target.value);\n  };\n  debugger;\n  const user = props.users\n    .filter((val) => {\n      if (searchTerm == \"\") {\n        return val;\n      } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return val;\n      }\n    })\n    .map((u) => {\n      return (\n        <SingleUser\n          name={u.name}\n          id={u.id}\n          lastMessage={u.lastMessage}\n          date={u.date}\n          setCurrentChat={props.setCurrentChat}\n          messages={u.messages}\n        />\n      );\n    });\n  return (\n    <div className={s.usersWrapper}>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          onChange={() => onChangeText}\n        />\n      </div>\n      <div>{user}</div>\n    </div>\n  );\n};\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}